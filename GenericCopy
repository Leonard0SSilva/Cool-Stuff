using UnityEngine;
using System.Collections;
using System.Reflection;
using System;

public static class GenericCopy 
{
	public static  void CopyWithReflection(object copyFrom, object copyTo)
	{
		object behaviourWeAreCopyingFrom;
		FieldInfo[] fieldsToCopy;

		//FROM
		behaviourWeAreCopyingFrom = copyFrom;
		Type behaviourTypeFrom = copyFrom.GetType();
		FieldInfo[] behaviourFields = behaviourTypeFrom.GetFields(BindingFlags.Default);
		fieldsToCopy = behaviourFields;

		//TO
		Type behaviourTypeTo = copyTo.GetType();
		FieldInfo[] behaviourFieldsTo = behaviourTypeTo.GetFields(BindingFlags.Default);
		foreach (FieldInfo field in fieldsToCopy)
		{
			object value = field.GetValue(behaviourWeAreCopyingFrom);
			foreach (FieldInfo thisField in behaviourFieldsTo)
			{
				if (thisField.Name == field.Name && thisField.FieldType == field.FieldType)
				{
					field.SetValue(copyTo, value);
				}
			}
		}
	}
}
